{
  "min_packer_version": "0.12.0",
  "variables": {
    "aws_region": "us-east-1",
    "instance_type": "t2.micro",
    "github_auth_token": "{{env `GITHUB_OAUTH_TOKEN`}}",
    "filebeat_version": "6.8.21",
    "module_app_server_version": "v0.0.1",
    "module_app_server_branch": "master",
    "use_ssl": "false"
  },
  "builders": [{
    "name": "app-server-ami-amazon-linux",
    "ami_name": "gruntwork-amazon-app-server-example-{{uuid | clean_resource_name}}",
    "ami_description": "An Amazon Linux 2 AMI that has filebeat and collectd installed.",
    "instance_type": "{{user `instance_type`}}",
    "region": "{{user `aws_region`}}",
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "amzn2-ami-hvm-*-x86_64-gp2",
        "block-device-mapping.volume-type": "gp2",
        "root-device-type": "ebs"
      },
      "owners": [
        "amazon"
      ],
      "most_recent": true
    },
    "ssh_username": "ec2-user"
  },{
    "name": "app-server-ami-ubuntu-20",
    "ami_name": "gruntwork-ubuntu-20-app-server-example-{{uuid | clean_resource_name}}",
    "ami_description": "An Ubuntu 20.04 AMI that has filebeat and collectd installed.",
    "instance_type": "{{user `instance_type`}}",
    "region": "{{user `aws_region`}}",
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
        "block-device-mapping.volume-type": "gp2",
        "root-device-type": "ebs"
      },
      "owners": [
        "099720109477"
      ],
      "most_recent": true
    },
    "ssh_username": "ubuntu"
  },{
    "name": "app-server-ami-ubuntu-18",
    "ami_name": "gruntwork-ubuntu-18-app-server-example-{{uuid | clean_resource_name}}",
    "ami_description": "An Ubuntu 18.04 AMI that has filebeat and collectd installed.",
    "instance_type": "{{user `instance_type`}}",
    "region": "{{user `aws_region`}}",
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*",
        "block-device-mapping.volume-type": "gp2",
        "root-device-type": "ebs"
      },
      "owners": [
        "099720109477"
      ],
      "most_recent": true
    },
    "ssh_username": "ubuntu"
  },{
    "name": "app-server-ami-centos",
    "ami_name": "gruntwork-centos-app-server-example-{{uuid | clean_resource_name}}",
    "ami_description": "A CentOS 7 AMI that has filebeat and collectd installed.",
    "instance_type": "{{user `instance_type`}}",
    "region": "{{user `aws_region`}}",
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "*CentOS Linux 7 x86_64 HVM EBS*",
        "root-device-type": "ebs"
      },
      "owners": [
        "679593333241"
      ],
      "most_recent": true
    },
    "ssh_username": "centos"
  },{
    "name": "app-server-docker-amazon-linux",
    "type": "docker",
    "image": "gruntwork/amazon-linux-test:2017.12",
    "commit": "true"
  },{
    "name": "app-server-docker-ubuntu-18",
    "type": "docker",
    "image": "gruntwork/ubuntu-test:18.04",
    "commit": "true"
  },{
    "name": "app-server-docker-ubuntu",
    "type": "docker",
    "image": "gruntwork/ubuntu-test:16.04",
    "commit": "true"
  },{
    "name": "app-server-docker-centos",
    "type": "docker",
    "image": "gruntwork/centos-test:latest",
    "commit": "true"
  }],
  "provisioners": [{
    "type": "shell",
    "inline": [
      "sudo yum update -y",
      "sudo yum install -y wget"
    ],
    "only": [
      "app-server-ami-centos"
    ]
  },{
    "type": "shell",
    "inline": [
      "# The ubuntu ami image has sudo installed and requires us to use it",
      "sleep 20",
      "# Get around issue where automatic ubuntu updates prevent package installation.",
      "# See https://groups.google.com/d/msg/packer-tool/NTvZP56DRqw/snr8PyoDBwAJ and https://github.com/boxcutter/ubuntu/issues/86",
      "curl -Ls https://raw.githubusercontent.com/gruntwork-io/bash-commons/v0.1.3/modules/bash-commons/src/dynamic-ubuntu-wait.sh | bash",
      "sudo apt-get -y update && sudo DEBIAN_FRONTEND=noninteractive apt-get -y upgrade"
    ],
    "only": ["app-server-ami-ubuntu-20", "app-server-ami-ubuntu-18"]
  },{
    "type": "shell",
    "inline": [
      "echo 'Install PolicyKit (https://wiki.debian.org/PolicyKit) to give CollectD access to privileged processes'",
      "sudo yum update -y",
      "sudo yum install -y polkit"
    ],
    "only": [
      "app-server-ami-amazon-linux",
      "app-server-docker-amazon-linux"
    ]
  },{
    "type": "shell",
    "inline": [
      "echo 'Removing outdated epel repository to prevent conflicts with the updated version installed by install-collectd'",
      "sudo yum remove -y epel*"
    ],
    "only": [
      "app-server-docker-centos"
    ]
  },{
    "type": "shell",
    "inline": [
      "mkdir -p /tmp/config/filebeat",
      "mkdir -p /tmp/config/collectd"
    ]
  },{
    "type": "file",
    "source": "{{template_dir}}/../filebeat/config",
    "destination": "/tmp/config/filebeat"
  },{
    "type": "file",
    "source": "{{template_dir}}/../collectd/config",
    "destination": "/tmp/config/collectd"
  },{
    "type": "file",
    "source": "{{template_dir}}/../filebeat/filebeat-install-steps.sh",
    "destination": "/tmp/filebeat-install-steps.sh"
  },{
    "type": "file",
    "source": "{{template_dir}}/../collectd/collectd-install-steps.sh",
    "destination": "/tmp/collectd-install-steps.sh"
  },{
    "type": "file",
    "source": "{{template_dir}}/../ssl",
    "destination": "/tmp"
  },{
    "type": "shell",
    "inline": [
      "curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/main/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version 'v0.0.21'",
      "gruntwork-install --module-name 'bash-commons' --repo 'https://github.com/gruntwork-io/bash-commons'  --tag 'v0.0.6'"
    ],
    "environment_vars": [
      "GITHUB_OAUTH_TOKEN={{user `github_auth_token`}}"
    ]
  },{
    "type": "shell",
    "inline": [
      "/tmp/filebeat-install-steps.sh {{user `use_ssl`}} {{ user `filebeat_version` }} {{user `module_app_server_version`}} {{user `module_app_server_branch`}} '/tmp/config/filebeat/config'",
      "gruntwork-install --module-name 'run-filebeat' --repo 'https://github.com/gruntwork-io/terraform-aws-elk' --tag '{{user `module_app_server_version`}}' --branch '{{user `module_app_server_branch`}}'",
      "gruntwork-install --module-name 'auto-discovery' --repo 'https://github.com/gruntwork-io/terraform-aws-elk' --tag '{{user `module_app_server_version`}}' --branch '{{user `module_app_server_branch`}}'"
    ],
    "environment_vars": [
      "GITHUB_OAUTH_TOKEN={{user `github_auth_token`}}"
    ]
  },{
    "type": "file",
    "source": "{{template_dir}}/../ssl",
    "destination": "/tmp"
  },{
    "type": "shell",
    "inline": [
      "/tmp/collectd-install-steps.sh {{user `use_ssl`}} {{user `module_app_server_version`}} {{user `module_app_server_branch`}} '/tmp/config/collectd/config' --module-param 'apt-version=5.7.2'",
      "gruntwork-install --module-name 'run-collectd' --repo 'https://github.com/gruntwork-io/terraform-aws-elk' --tag '{{user `module_app_server_version`}}' --branch '{{user `module_app_server_branch`}}'"
    ],
    "environment_vars": [
      "GITHUB_OAUTH_TOKEN={{user `github_auth_token`}}"
    ],
    "only": ["app-server-ami-ubuntu-18", "app-server-docker-ubuntu-18"]
  },{
    "type": "shell",
    "inline": [
      "/tmp/collectd-install-steps.sh {{user `use_ssl`}} {{user `module_app_server_version`}} {{user `module_app_server_branch`}} '/tmp/config/collectd/config'",
      "gruntwork-install --module-name 'run-collectd' --repo 'https://github.com/gruntwork-io/terraform-aws-elk' --tag '{{user `module_app_server_version`}}' --branch '{{user `module_app_server_branch`}}'"
    ],
    "environment_vars": [
      "GITHUB_OAUTH_TOKEN={{user `github_auth_token`}}"
    ],
    "only": [
      "app-server-ami-amazon-linux",
      "app-server-ami-ubuntu-20",
      "app-server-ami-centos",
      "app-server-docker-amazon-linux",
      "app-server-docker-ubuntu",
      "app-server-docker-centos"
    ]
  }],
  "post-processors": [{
    "type": "docker-tag",
    "repository": "gruntwork/app-server-amazon-linux",
    "tag": "latest",
    "only": [
      "app-server-docker-amazon-linux"
    ]
  },{
    "type": "docker-tag",
    "repository": "gruntwork/app-server-ubuntu-18",
    "tag": "latest",
    "only": [
      "app-server-docker-ubuntu-18"
    ]
  },{
    "type": "docker-tag",
    "repository": "gruntwork/app-server-ubuntu",
    "tag": "latest",
    "only": [
      "app-server-docker-ubuntu"
    ]
  },{
    "type": "docker-tag",
    "repository": "gruntwork/app-server-centos",
    "tag": "latest",
    "only": [
      "app-server-docker-centos"
    ]
  }]
}
