#!/usr/bin/env bash

set -e

readonly SCRIPT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly DEFAULT_LOGSTASH_CONFIG_FILE_PATH="/etc/logstash/logstash.yml"
readonly DEFAULT_LOGSTASH_JVM_CONFIG_FILE_PATH="/etc/logstash/jvm.options"
readonly DEFAULT_LOGSTASH_PIPELINE_CONFIG_FILE_PATH="/etc/logstash/conf.d/pipeline.conf"


# Import the appropriate bash commons libraries
readonly BASH_COMMONS_DIR="/opt/gruntwork/bash-commons"

if [[ ! -d "$BASH_COMMONS_DIR" ]]; then
  echo "ERROR: this script requires that bash-commons is installed in $BASH_COMMONS_DIR. See https://github.com/gruntwork-io/bash-commons for more info."
  exit 1
fi

source "$BASH_COMMONS_DIR/assert.sh"
source "$BASH_COMMONS_DIR/log.sh"
source "$BASH_COMMONS_DIR/os.sh"
source "$BASH_COMMONS_DIR/file.sh"

function print_usage {
  echo
  echo "Usage: run-logstash [options]"
  echo
  echo "This script can be used to configure and run Logstash. This script has been tested with Ubuntu 20.04 + 18.04, CentOS 7 and Amazon Linux 2."
  echo
  echo "Options:"
  echo
  echo -e "  --auto-fill KEY=VALUE\t\t\tSearch the Logstash config file for KEY and replace it with VALUE. May be repeated."
  echo -e "  --auto-fill-pipeline KEY=VALUE\t\t\tSearch the Logstash pipeline config file for KEY and replace it with VALUE. May be repeated."
  echo -e "  --auto-fill-jvm KEY=VALUE\t\t\tSearch the Logstash JVM config file for KEY and replace it with VALUE. May be repeated."
  echo -e "  --help\t\t\t\tShow this help text and exit."
  echo
  echo "Example:"
  echo
  echo "  run-logstash --auto-fill '<__KEY__>=VALUE' --auto-fill-jvm '<__XMS__>=4g'\\"
}

function auto_fill_config {
  local -r config="$1"
  shift 1
  local -r auto_fill=("$@")

  if [[ -z "${auto_fill[@]}" ]]; then
    log_info "No auto-fill for $config params specified."
    return
  fi

  local param
  for param in "${auto_fill[@]}"; do
    auto_fill_param "$config" "$param"
  done
}

function auto_fill_param {
  local -r config="$1"
  local -r param="$2"

  # The param is of the format KEY=VALUE.
  local -r placeholder_name="$(string_strip_suffix "$param" "=*")"
  local -r placeholder_value="$(string_strip_prefix "$param" "*=")"

  log_info "Replacing the '$placeholder_name' placeholder in $config with $placeholder_value"
  file_replace_text "$placeholder_name" "$placeholder_value" "$config"
}

function start_logstash {
  log_info "Starting Logstash"

  # We need to set this to ensure Logstash finds our config files
  export LS_SETTINGS_DIR="$(dirname "${DEFAULT_LOGSTASH_CONFIG_FILE_PATH}")"

  sudo systemctl enable logstash
  sudo systemctl start logstash
}

function run {

    local auto_fill=()
    local auto_fill_jvm=()
    local auto_fill_pipeline=()

    while [[ $# > 0 ]]; do
        local key="$1"

        case "$key" in
          --auto-fill)
            assert_not_empty "$key" "$2"
            auto_fill+=("$2")
            shift
            ;;
            --auto-fill-jvm)
            assert_not_empty "$key" "$2"
            auto_fill_jvm+=("$2")
            shift
            ;;
          --auto-fill-pipeline)
            assert_not_empty "$key" "$2"
            auto_fill_pipeline+=("$2")
            shift
            ;;
          --help)
            print_usage
            exit
            ;;
          *)
            echo "Unrecognized argument: $key"
            print_usage
            exit 1
            ;;
        esac

        shift
    done

    auto_fill_config "$DEFAULT_LOGSTASH_CONFIG_FILE_PATH" "${auto_fill[@]}"
    auto_fill_config "$DEFAULT_LOGSTASH_PIPELINE_CONFIG_FILE_PATH" "${auto_fill_pipeline[@]}"
    auto_fill_config "$DEFAULT_LOGSTASH_JVM_CONFIG_FILE_PATH" "${auto_fill_jvm[@]}"

    start_logstash
}

run "$@"
